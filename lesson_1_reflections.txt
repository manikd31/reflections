How did viewing a diff between two versions of a file help you see the bug that was introduced?

	It was quite easy to compare only the statements where there were differences in the entire document.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	This avoids the use of different file names to be created or overwriting of files everytime a document changes.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    + Avoid saving multiple times without much relevant changes.
    - Forget saving critical changes on time, or save too many verisons.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    In case there are more than one files linked together or which work simultaneously, saving all of them with one commit will avoid saving each file separately.

How can you use the commands git log and git diff to view the history of files?

    git log can be used to show all commits made to the files in the repository. git diff can be used to make out the differences between any two commits using their commit IDs.

How might using version control make you more confident to make changes that could break something?

    since the entire file(s) is saved on commit, any changes that don't work can be reverted and newer areas or procedures can be approached.

Now that you have your workspace set up, what do you want to try using Git for?

    Git will help me compare different files, or even similar files having saved at different times to check where I might have gone wrong.